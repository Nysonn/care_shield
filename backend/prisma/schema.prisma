datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(uuid())
  fullName    String
  phone       String   @unique
  email       String?  @unique
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      MedOrder[]
  surveyTickets SurveyTicket[]
}

model Drug {
  id                 String   @id @default(uuid())
  name               String
  description        String
  dosage             String
  price              Float
  currency           String   @default("UGX")
  category           String
  requiresPrescription Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  orders             MedOrder[]
}

model MedOrder {
  id           String   @id @default(uuid())
  stage        String
  location     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  eta          String
  totalAmount  Float
  deliveryFee  Float
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  drugs        Drug[]
  payment      Payment? @relation(fields: [paymentId], references: [id])
  paymentId    String?  @unique
}

model Payment {
  id            String        @id @default(uuid())
  method        String
  status        String
  amount        Float
  currency      String        @default("UGX")
  referenceCode String?
  processedAt   DateTime?     @default(now())
  failureReason String?
  order         MedOrder?     
}

model HealthCenter {
  id        String   @id @default(uuid())
  name      String
  address   String
  distanceKm Float
  openHours String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SurveyTicket {
  id        String   @id @default(uuid())
  symptoms  String[]
  severity  String
  notes     String?
  createdAt DateTime @default(now())
  status    String   @default("Pending")
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
